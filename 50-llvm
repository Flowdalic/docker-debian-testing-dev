#!/usr/bin/env bash
set -euo pipefail

source config

readonly DEBIAN_CODENAME="unstable"
declare -ir LLVM_VERSION=12

readonly LLVM_APT_PACKAGES_DB="http://apt.llvm.org/${DEBIAN_CODENAME}/db/packages.db"

if ! wget --method=HEAD "${LLVM_APT_PACKAGES_DB}"; then
    echo "LLVM package database for ${DEBIAN_CODENAME} does not exist. Falling back to manual installation."

    apt install -y lsb-release wget software-properties-common

    wget https://apt.llvm.org/llvm.sh
    chmod +x llvm.sh
    ./llvm.sh "${LLVM_VERSION}"
    rm llvm.sh
    exit
fi

case "${DEBIAN_CODENAME}" in
    unstable)
	readonly LLVM_REPO_NAME="llvm-toolchain-${LLVM_VERSION}"
	;;
    *)
	readonly LLVM_REPO_NAME="llvm-toolchain-${DEBIAN_CODENAME}-${LLVM_VERSION}"
	;;
esac

cat <<EOF > /etc/apt/sources.list.d/llvm.list
deb http://apt.llvm.org/${DEBIAN_CODENAME}/ ${LLVM_REPO_NAME} main
deb-src http://apt.llvm.org/${DEBIAN_CODENAME}/ ${LLVM_REPO_NAME} main
EOF

wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

apt-get update

readarray LLVM_PACKAGES <<EOF
clang-${LLVM_VERSION}
clang-format-${LLVM_VERSION}
clang-tidy-${LLVM_VERSION}
clang-tools-${LLVM_VERSION}
clangd-${LLVM_VERSION}
libc++-${LLVM_VERSION}-dev
libc++abi-${LLVM_VERSION}-dev
libclang-${LLVM_VERSION}-dev
libclang-common-${LLVM_VERSION}-dev
libclang1-${LLVM_VERSION}
libclc-${LLVM_VERSION}
libfuzzer-${LLVM_VERSION}-dev
libllvm-${LLVM_VERSION}-ocaml-dev
libllvm${LLVM_VERSION}
libomp-${LLVM_VERSION}-dev
lld-${LLVM_VERSION}
lldb-${LLVM_VERSION}
llvm-${LLVM_VERSION}
llvm-${LLVM_VERSION}-dev
llvm-${LLVM_VERSION}-examples
llvm-${LLVM_VERSION}-runtime
python3-clang-${LLVM_VERSION}
EOF

apt-get ${APT_INSTALL} ${LLVM_PACKAGES[@]}

# Make libomp findable via e.g. Meson's find_library()
ln -s "/usr/lib/llvm-${LLVM_VERSION}/lib/libomp.so" /usr/lib
